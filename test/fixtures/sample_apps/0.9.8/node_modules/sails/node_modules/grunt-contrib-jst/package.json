{
  "name": "grunt-contrib-jst",
  "description": "Precompile Underscore templates to JST file.",
  "version": "0.5.0",
  "homepage": "https://github.com/gruntjs/grunt-contrib-jst",
  "author": {
    "name": "Grunt Team",
    "url": "http://gruntjs.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gruntjs/grunt-contrib-jst.git"
  },
  "bugs": {
    "url": "https://github.com/gruntjs/grunt-contrib-jst/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/gruntjs/grunt-contrib-jst/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "lodash": "~1.0.0",
    "grunt-lib-contrib": "~0.5.1"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.2.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-internal": "~0.4.2",
    "grunt": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "contributors": [
    {
      "name": "Tim Branyen",
      "url": "http://tbranyen.com"
    },
    {
      "name": "Tyler Kellen",
      "url": "http://goingslowly.com/"
    },
    {
      "name": "Chris Talkington",
      "url": "http://christalkington.com/"
    },
    {
      "name": "Larry Davis",
      "url": "http://lazd.net/"
    },
    {
      "name": "Adrien Antoine",
      "url": "http://adriantoine.com/"
    }
  ],
  "readme": "# grunt-contrib-jst [![Build Status](https://secure.travis-ci.org/gruntjs/grunt-contrib-jst.png?branch=master)](http://travis-ci.org/gruntjs/grunt-contrib-jst)\n\n> Precompile Underscore templates to JST file.\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-jst --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-jst');\n```\n\n*This plugin was designed to work with Grunt 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4), but in case you can't please use [v0.3.1](https://github.com/gruntjs/grunt-contrib-jst/tree/grunt-0.3-stable).*\n\n\n\n## Jst task\n_Run this task with the `grunt jst` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n_This plugin uses [the Lo-Dash library](http://lodash.com/) to generate JavaScript template functions. Some developers generate template functions dynamically during development. If you are doing so, please be aware that the functions generated by this plugin may differ from those created at run-time. For instance, [the Underscore.js library](http://underscorejs.org/) will throw an exception if templates reference undefined top-level values, while Lo-Dash will silently insert an empty string in their place._\n### Options\n\n#### separator\nType: `String`\nDefault: linefeed + linefeed\n\nConcatenated files will be joined on this string.\n\n#### namespace\nType: `String`\nDefault: 'JST'\n\nThe namespace in which the precompiled templates will be asssigned.  *Use dot notation (e.g. App.Templates) for nested namespaces.*\n\n#### processName\nType: `function`\nDefault: null\n\nThis option accepts a function which takes one argument (the template filepath) and returns a string which will be used as the key for the precompiled template object.  The example below stores all templates on the default JST namespace in capital letters.\n\n```js\noptions: {\n  processName: function(filename) {\n    return filename.toUpperCase();\n  }\n}\n```\n\n#### templateSettings\nType: `Object`\nDefault: null\n\nThe settings passed to underscore when compiling templates.\n\n```js\njst: {\n  compile: {\n    options: {\n      templateSettings: {\n        interpolate : /\\{\\{(.+?)\\}\\}/g\n      }\n    },\n    files: {\n      \"path/to/compiled/templates.js\": [\"path/to/source/**/*.html\"]\n    }\n  }\n}\n```\n\n#### prettify\nType: `boolean`\nDefault: false\n\nWhen doing a quick once-over of your compiled template file, it's nice to see\nan easy-to-read format that has one line per template. This will accomplish\nthat.\n\n```js\noptions: {\n  prettify: true\n}\n```\n\n#### amdWrapper\nType: `boolean`\nDefault: false\n\nWith Require.js and a pre-compiled template.js you want the templates to be\nwrapped in a define. This will wrap the output in:\n\n```js\ndefine(function() {\n  //Templates\n  return this[\"NAMESPACE\"];\n});\n```\n\nExample:\n```js\noptions: {\n  amdWrapper: true\n}\n```\n\n#### processContent\nType: `function`\n\nThis option accepts a function which takes one argument (the file content) and\nreturns a string which will be used as template string.\nThe example below strips whitespace characters from the beginning and the end of\neach line.\n\n```js\noptions: {\n  processContent: function(src) {\n    return src.replace(/(^\\s+|\\s+$)/gm, '');\n  }\n}\n```\n\n### Usage Examples\n\n```js\njst: {\n  compile: {\n    options: {\n      templateSettings: {\n        interpolate : /\\{\\{(.+?)\\}\\}/g\n      }\n    },\n    files: {\n      \"path/to/compiled/templates.js\": [\"path/to/source/**/*.html\"]\n    }\n  }\n}\n```\n\n\n## Release History\n\n * 2013-03-05   v0.5.0   When `namespace` is false and `amd` is true, return templates directly from AMD wrapper. Rename `amdwrapper` option to `amd` to match grunt-contrib-handlebars.\n * 2013-02-14   v0.4.1   First official release for Grunt 0.4.0.\n * 2012-01-28   v0.4.1rc7   Correct line endings for lodash output on windows.\n * 2013-01-22   v0.4.0rc7   Updating grunt/gruntplugin dependencies to rc7. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\n * 2013-01-08   v0.4.0rc5   Updating to work with grunt v0.4.0rc5. Switching to this.files api.\n * 2012-10-11   v0.3.1   Rename grunt-contrib-lib dep to grunt-lib-contrib.\n * 2012-08-22   v0.3.0   Options no longer accepted from global config key.\n * 2012-08-15   v0.2.3   Support for nested namespaces.\n * 2012-08-11   v0.2.2   Added processName functionality & escaping single quotes in filenames.\n * 2012-08-09   v0.2.0   Refactored from grunt-contrib into individual repo.\n\n---\n\nTask submitted by [Tim Branyen](http://tbranyen.com)\n\n*This file was generated on Wed Mar 06 2013 12:51:11.*\n",
  "readmeFilename": "README.md",
  "_id": "grunt-contrib-jst@0.5.0",
  "_shasum": "559f1650cca16d95cbe4e42487b018cd2962b7ec",
  "_from": "grunt-contrib-jst@0.5.0",
  "_resolved": "https://registry.npmjs.org/grunt-contrib-jst/-/grunt-contrib-jst-0.5.0.tgz"
}
