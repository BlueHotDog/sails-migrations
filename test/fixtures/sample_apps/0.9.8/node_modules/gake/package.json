{
  "name": "gake",
  "version": "0.1.2",
  "description": "Make loading grunt tasks/config from external files easy",
  "main": "index.js",
  "scripts": {
    "test": "mocha test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/BlueHotDog/gake.git"
  },
  "author": {
    "name": "BlueHotDog"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/BlueHotDog/gake/issues"
  },
  "homepage": "https://github.com/BlueHotDog/gake",
  "devDependencies": {
    "mocha": "~1.15.1"
  },
  "dependencies": {
    "grunt": "~0.4.2",
    "lodash": "~2.4.1",
    "coffee-script": "",
    "wrench": "~1.5.4",
    "mkdirp": "~0.3.5",
    "dot": "~1.0.2"
  },
  "peerDependencies": {
    "grunt": "~0.4"
  },
  "keywords": [
    "gruntplugin",
    "gake",
    "grunt",
    "rake"
  ],
  "files": [
    "lib",
    "tasks",
    "LICENSE-MIT"
  ],
  "engines": {
    "node": ">= 0.10.0"
  },
  "readme": "[![NPM version](https://badge.fury.io/js/gake.png)](http://badge.fury.io/js/gake)\n# Gake\n\n  Gake is a simple grunt module which allows you to keep your grunt tasks/config separated into different files, much like\n  rake.\n\n## Installation\n\n  ```\n  $ npm install gake --save\n  ```\n\n## Motivation\n\n  This library started out when I needed to create a generator to generate rake like tasks into the [SailsJS](http://sailsjs.org/) project.\n  It seems that, for some reason having a 400loc grunt file is a common practice in the NodeJS community.\n  Which makes maintaining tasks very needlessly hard and messy.\n\n\n## Usage\n\n  add this into your grunt config:\n\n  ```\n  gake: {\n        configDir: './grunt/config',\n        tasksDir: './grunt/tasks'\n      }\n  ```\n\n  and register this npm task **after** you did ```grunt.initConfig```\n\n  ```\n  grunt.loadNpmTasks('gake');\n  ```\n\n  Now you can use two helper grunt tasks to generate your tasks/configs\n  ```\n  grunt gake:task --name=\"my:custom:task\"\n  ```\n  this will create the my/custom/task.js file under the *tasksDir* folder,\n  and a my/custom/task.js under the *configDir* folder, where you can put your tasks config files.\n\n  you can also run\n  ```\n  grunt gake:config --name=\"my.custom.config\"\n  ```\n  which will generate only the config file.\n\n## Convention\n\n  * **Configuration loading**\n\n    This will load all the config from the *configDir* into the grunt.config object, when the path is the namespace,\n    for example, the following path:\n    ```\n    ./grunt/config/my/task/config.js\n    ```\n    will create the following config:\n    ```\n    grunt.config.my.task.config\n    ```\n\n  * **Tasks loading**\n\n    This loads all the tasks from the *tasksDir* by requiring all files in the *tasksDir* recursively.\n\n## Examples\n\n  You can take a look at the test folder to see example directory structure and usage.\n\n## TODO\n\n  * Add real tests\n  * Add option to generate config/tasks using coffee-script\n",
  "readmeFilename": "README.md",
  "_id": "gake@0.1.2",
  "_shasum": "06773e184f787f227b73f20e67e67bce823fc57a",
  "_from": "gake@~0.1.2",
  "_resolved": "https://registry.npmjs.org/gake/-/gake-0.1.2.tgz"
}
