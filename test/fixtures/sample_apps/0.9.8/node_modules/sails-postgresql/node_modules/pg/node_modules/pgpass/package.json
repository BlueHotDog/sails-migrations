{
  "name": "pgpass",
  "version": "0.0.1",
  "description": "Module for reading .pgpass",
  "main": "lib/index",
  "scripts": {
    "pretest": "chmod 600 ./test/_pgpass",
    "test": "npm run hint && mocha -R list && npm run coverage",
    "coverage": "rm -rf -- lib-cov ; PATH=$PATH:./node_modules/jscoverage/bin ; jscoverage lib lib-cov && mocha -R html-cov > coverage.html",
    "hint": "PATH=$PATH:./node_modules/jshint/bin ; jshint --verbose lib test"
  },
  "author": {
    "name": "Hannes HÃ¶rl",
    "email": "hannes.hoerl+pgpass@snowreporter.com"
  },
  "license": "BSD-2-Clause",
  "dependencies": {
    "split": "~0.2.10"
  },
  "devDependencies": {
    "mocha": "~1.14.0",
    "resumer": "0.0.0",
    "jscoverage": "~0.3.8",
    "jshint": "~2.3.0"
  },
  "keywords": [
    "postgres",
    "pg",
    "pgpass",
    "password",
    "postgresql"
  ],
  "bugs": {
    "url": "https://github.com/hoegaarden/pgpass/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/hoegaarden/pgpass.git"
  },
  "readme": "# pgpass\n\n[![Build Status](https://travis-ci.org/hoegaarden/pgpass.png?branch=master)](https://travis-ci.org/hoegaarden/pgpass)\n\n## Install\n\n```sh\nnpm install --save hoegaarden/pgpass\n```\n\n## Usage\n```js\nvar pgPass = require('pgpass');\n\nvar connInfo = {\n  'host' : 'pgserver' ,\n  'user' : 'the_user_name' ,\n};\n\n\n// ---- async ----\npgPass(connInfo, function(pass){\n  conn_info.password = pass;\n  // connect to postgresql server\n});\n```\n\n## Description\n\nThis module tries to read the `~/.pgpass` file (or the equivalent for windows systems). If the environment variable `PGPASSFILE` is set, this file is used instead. If everything goes right, the password from said file is to the callback; if the password cannot be read `undefined` is passed to the callback.\n\nCases where `undefined` is returned:\n\n- the environment variable `PGPASSWORD` is set\n- the file cannot be read (wrong permissions, no such file, ...)\n- for non windows systems: the file is write-/readable by the group or by other users\n- there is no matching line for the given connection info\n\nThe goal of this package is to get included in the `node-postgresql` module to get the same behaviour for the javascript client as for the native client.\n\n## Tests\n\nThere are tests in `./test/`; including linting and coverage testing. Running `npm test` runs:\n\n- `jshint`\n- `mocha` tests\n- `jscoverage` and `mocha -R html-cov`\n\nYou can see the coverage report in `coverage.html`.\n\n\n## Development, Patches, Bugs, ...\n\nIf you find Bugs or have improvments, please feel free to open a issue on github. If you provide a pull request, I'm more than happy to merge them, just make sure to add tests for your changes.\n\n## Links\n\n- https://github.com/hoegaarden/node-pgpass\n- http://www.postgresql.org/docs/current/static/libpq-pgpass.html\n- https://wiki.postgresql.org/wiki/Pgpass\n- https://github.com/postgres/postgres/blob/master/src/interfaces/libpq/fe-connect.c\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/hoegaarden/pgpass",
  "_id": "pgpass@0.0.1",
  "_shasum": "39bea2df1e36f776ff069ed22966ea187646c405",
  "_from": "pgpass@0.0.1",
  "_resolved": "https://registry.npmjs.org/pgpass/-/pgpass-0.0.1.tgz"
}
